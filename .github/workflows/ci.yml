name: CI Security Pipeline

permissions:
  contents: read
  actions: read
  issues: write
  pull-requests: write

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  sast:
    name: Static Code Analysis (Semgrep)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install Semgrep
        run: pip install semgrep

      - name: Run Semgrep SAST and Save Report
        run: semgrep --config auto . --json > semgrep_report.json

      - name: Upload Semgrep Report
        uses: actions/upload-artifact@v4
        with:
          name: semgrep_report  # Простое имя для артефакта
          path: semgrep_report.json
      - name: Create GitHub Issues from Semgrep Report
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const report = JSON.parse(fs.readFileSync('semgrep-report.json', 'utf8'));
            for (const result of report.results) {
              const title = `Semgrep Issue: ${result.check_id}`;
              const body = `
                **Path:** ${result.path}
                **Line:** ${result.start.line}
                **Message:** ${result.extra.message}
                **Severity:** ${result.extra.severity}
                **Link:** ${result.extra.metadata?.references?.[0] || 'N/A'}
              `;
              await github.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: title,
                body: body,
                labels: ['semgrep', result.extra.severity]
              });
            }

  dast:
    name: Dynamic App Scan (OWASP ZAP)
    runs-on: ubuntu-latest
    needs: sast

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11  # Убедись, что версия Python доступна

      - name: Install dependencies
        run: |
          pip install flask

      - name: Проверка наличия файла
        run: ls -la

      - name: Run Flask app in background
        run: |
          nohup python main.py &
          sleep 10

      - name: ZAP Scan
        uses: zaproxy/action-full-scan@v0.12.0
        with:
          target: 'http://localhost:5000'